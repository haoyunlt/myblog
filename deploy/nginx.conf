# Nginx性能优化配置
# 用于部署时的性能优化

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name www.tommienotes.com tommienotes.com;
    
    # 强制重定向到HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS配置
server {
    listen 443 ssl http2;
    server_name www.tommienotes.com tommienotes.com;
    
    # SSL配置
    ssl_certificate /etc/letsencrypt/live/www.tommienotes.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.tommienotes.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 根目录
    root /var/www/html;
    index index.html;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self';" always;
    
    # 移动端优化头部
    add_header X-UA-Compatible "IE=edge" always;
    add_header X-DNS-Prefetch-Control "on" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # 性能优化头
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;
    
    # 启用Brotli压缩（需要nginx-module-brotli）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types
    #     text/plain
    #     text/css
    #     text/xml
    #     text/javascript
    #     application/json
    #     application/javascript
    #     application/xml+rss
    #     application/atom+xml
    #     image/svg+xml
    #     font/woff
    #     font/woff2;
    
    # 移动端JavaScript优化
    location ~* \.js$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Vary "Accept-Encoding";
        
        # 启用压缩
        gzip_static on;
        # brotli_static on;
        
        # 安全头
        add_header X-Content-Type-Options "nosniff";
    }
    
    # 移动端CSS优化
    location ~* \.css$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Vary "Accept-Encoding";
        
        # 启用压缩
        gzip_static on;
        # brotli_static on;
        
        # 关键CSS预加载
        add_header Link "</css/extended/mobile-performance.css>; rel=preload; as=style";
    }
    
    # HTML文件缓存
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        
        # 启用ETag
        etag on;
    }
    
    # Service Worker特殊处理
    location = /sw.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # 字体文件优化（移动端特别重要）
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Vary "Accept-Encoding";
        
        # 字体预加载优化
        add_header Link "</assets/fonts/inter-regular.woff2>; rel=preload; as=font; type=font/woff2; crossorigin";
        
        # 启用字体压缩
        gzip_static on;
        # brotli_static on;
    }
    
    # 图片优化
    location ~* \.(png|jpg|jpeg|gif|webp|svg)$ {
        expires 6M;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        add_header Access-Control-Allow-Origin "*";
        
        # 移动端优化
        add_header X-Content-Type-Options "nosniff";
        add_header Accept-Ranges "bytes";
        
        # 启用图片优化
        # image_filter resize 800 600;
        # image_filter_jpeg_quality 85;
        # image_filter_webp_quality 85;
        
        # SVG特殊处理
        location ~* \.svg$ {
            add_header Content-Type "image/svg+xml";
            add_header Cache-Control "public, max-age=31536000";
        }
    }
    
    # API请求
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API缓存
        expires 5m;
        add_header Cache-Control "public, max-age=300";
    }
    
    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 主要路由（移动端优化）
    location / {
        try_files $uri $uri/ =404;
        
        # HTTP/2服务器推送（关键资源）
        http2_push /assets/css/stylesheet.css;
        http2_push /css/extended/mobile-performance.css;
        http2_push /js/mobile-performance.js;
        http2_push /assets/fonts/inter-regular.woff2;
        
        # 移动端安全头
        add_header Feature-Policy "geolocation 'none'; microphone 'none'; camera 'none'" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # 日志配置
    access_log /var/log/nginx/tommie-blog.access.log;
    error_log /var/log/nginx/tommie-blog.error.log;
}

# 性能监控配置
server {
    listen 8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    
    location /metrics {
        return 200 "nginx_metrics\n";
        add_header Content-Type text/plain;
    }
}
